@model Adrians.ViewModels.BarcaViewModel

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("fetchGptForm");
            const spinner = document.getElementById("gptSpinner");
            const button = document.getElementById("fetchGptButton");

            form?.addEventListener("submit", function () {
                spinner.classList.remove("d-none");
                button.disabled = true;
                button.innerText = "Henter oppsummering...";
            });
        });
    </script>
}

<div class="container mt-5">
    @if (!string.IsNullOrWhiteSpace(Model.GptSummaryHtml))
    {
        <div class="alert bg-dark text-light border-light rounded shadow-sm p-4">
            <h4 class="text-center mb-3">Daglig Oppsummering fra ChatGPT</h4>

            <div class="markdown-body">
                @Html.Raw(Model.GptSummaryHtml)
            </div>
        </div>
    }

    <form id="fetchGptForm" asp-action="FetchGptSummary" method="post" class="text-center mb-5">
        <button id="fetchGptButton" type="submit" class="btn btn-primary shadow">
            Hent Daglig Oppsummering fra ChatGPT
        </button>
        <div id="gptSpinner" class="spinner-border text-primary ms-3 d-none" role="status">
            <span class="visually-hidden">Laster...</span>
        </div>
    </form>


    <h2 class="mb-4 text-center">Upcoming Matches for FC Barcelona</h2>
    <div class="row">
        @foreach (var match in Model.Matches)
        {
            var matchDate = DateTime.Parse(match.Date);

            <div class="col-md-4">
                <div class="card mb-4 shadow-sm bg-dark text-light">
                    <div class="card-body text-center">
                        <div class="d-flex justify-content-between align-items-center">
                            @if (!string.IsNullOrEmpty(match.HomeTeamLogo))
                            {
                                <img src="@match.HomeTeamLogo" alt="@match.HomeTeamShortName"
                                     style="width: 40px; height: 40px; object-fit: cover;"/>
                            }
                            <h5 class="card-title">@match.HomeTeamShortName vs @match.AwayTeamShortName</h5>
                            @if (!string.IsNullOrEmpty(match.AwayTeamLogo))
                            {
                                <img src="@match.AwayTeamLogo" alt="@match.AwayTeamShortName"
                                     style="width: 40px; height: 40px; object-fit: cover;"/>
                            }
                        </div>
                        <p class="card-subtitle text-light">
                            <strong>
                                @if (match.Status == "SCHEDULED")
                                {
                                    @:<!-- Match date is blank when status is SCHEDULED -->
                                }
                                else
                                {
                                    @matchDate.ToString("dd/MM/yyyy HH:mm")
                                }
                            </strong>
                        </p>
                        <p class="card-text">
                            Status:
                            @if (match.Status == "SCHEDULED")
                            {
                                <span class="badge bg-warning text-dark">Scheduled</span>
                            }
                            else
                            {
                                <span class="badge bg-info text-dark">@match.Status</span>
                            }
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>